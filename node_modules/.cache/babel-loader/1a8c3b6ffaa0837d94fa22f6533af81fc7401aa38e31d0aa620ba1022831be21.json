{"ast":null,"code":"import React from'react';import'./MarketSentiment.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MarketSentiment=_ref=>{let{aiTraders,commodities,onClose}=_ref;// Calculate market sentiment metrics\nconst calculateMarketSentiment=()=>{const totalTraders=aiTraders.length;// Emotional distribution\nconst emotions=aiTraders.reduce((acc,trader)=>{acc[trader.emotionalState]=(acc[trader.emotionalState]||0)+1;return acc;},{});// Strategy distribution\nconst strategies=aiTraders.reduce((acc,trader)=>{acc[trader.strategy]=(acc[trader.strategy]||0)+1;return acc;},{});// Average emotional intensity\nconst avgEmotionalIntensity=aiTraders.reduce((sum,trader)=>sum+trader.emotionalIntensity,0)/totalTraders;// FOMO and panic levels\nconst fomoCount=emotions.fomo||0;const panicCount=emotions.panic||0;const greedyCount=emotions.greedy||0;const fearfulCount=emotions.fearful||0;// Overall sentiment score (-1 to 1, where -1 is very bearish, 1 is very bullish)\nlet sentimentScore=0;// Positive emotions contribute positively\nsentimentScore+=(emotions.excited||0)*0.3;sentimentScore+=(emotions.greedy||0)*0.2;sentimentScore+=(emotions.calm||0)*0.1;// Negative emotions contribute negatively\nsentimentScore-=(emotions.fearful||0)*0.2;sentimentScore-=(emotions.panic||0)*0.4;sentimentScore-=(emotions.fomo||0)*0.1;// FOMO can be both positive and negative\n// Normalize to -1 to 1 range\nsentimentScore=Math.max(-1,Math.min(1,sentimentScore/totalTraders));return{emotions,strategies,avgEmotionalIntensity,fomoCount,panicCount,greedyCount,fearfulCount,sentimentScore,totalTraders};};const sentiment=calculateMarketSentiment();const getSentimentColor=score=>{if(score>0.3)return'#00ff88';if(score>0)return'#ffaa00';if(score>-0.3)return'#ffaa00';return'#ff4444';};const getSentimentLabel=score=>{if(score>0.5)return'Very Bullish';if(score>0.2)return'Bullish';if(score>-0.2)return'Neutral';if(score>-0.5)return'Bearish';return'Very Bearish';};const getEmotionColor=emotion=>{const colors={calm:'#4CAF50',excited:'#FF9800',fearful:'#9C27B0',greedy:'#FF5722',panic:'#F44336',fomo:'#E91E63'};return colors[emotion]||'#757575';};const getStrategyColor=strategy=>{const colors={momentum:'#2196F3',mean_reversion:'#4CAF50',arbitrage:'#FF9800',scalping:'#9C27B0',swing:'#607D8B',value:'#795548',growth:'#00BCD4',contrarian:'#FF5722',trend_following:'#3F51B5',breakout:'#E91E63'};return colors[strategy]||'#757575';};return/*#__PURE__*/_jsxs(\"div\",{className:\"market-sentiment\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"sentiment-header\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uD83D\\uDCCA Market Sentiment\"}),onClose&&/*#__PURE__*/_jsx(\"button\",{className:\"sentiment-close-btn\",onClick:onClose,title:\"Close Market Sentiment\",children:\"\\xD7\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"sentiment-score\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"sentiment-indicator\",style:{backgroundColor:getSentimentColor(sentiment.sentimentScore),transform:\"scale(\".concat(1+Math.abs(sentiment.sentimentScore)*0.3,\")\")}}),/*#__PURE__*/_jsx(\"span\",{className:\"sentiment-label\",children:getSentimentLabel(sentiment.sentimentScore)})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"sentiment-metrics\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"metric-row\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Emotional Intensity\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"metric-value\",children:[(sentiment.avgEmotionalIntensity*100).toFixed(1),\"%\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"metric-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"metric-label\",children:\"Active Traders\"}),/*#__PURE__*/_jsx(\"span\",{className:\"metric-value\",children:sentiment.totalTraders})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"sentiment-charts\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Emotional Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"emotion-chart\",children:Object.entries(sentiment.emotions).map(_ref2=>{let[emotion,count]=_ref2;return/*#__PURE__*/_jsxs(\"div\",{className:\"emotion-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"emotion-label\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"emotion-icon\",children:[emotion==='calm'&&'😐',emotion==='excited'&&'🤩',emotion==='fearful'&&'😨',emotion==='greedy'&&'😈',emotion==='panic'&&'😱',emotion==='fomo'&&'😰']}),/*#__PURE__*/_jsx(\"span\",{className:\"emotion-name\",children:emotion})]}),/*#__PURE__*/_jsx(\"div\",{className:\"emotion-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"emotion-fill\",style:{width:\"\".concat(count/sentiment.totalTraders*100,\"%\"),backgroundColor:getEmotionColor(emotion)}})}),/*#__PURE__*/_jsx(\"span\",{className:\"emotion-count\",children:count})]},emotion);})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chart-section\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Strategy Distribution\"}),/*#__PURE__*/_jsx(\"div\",{className:\"strategy-chart\",children:Object.entries(sentiment.strategies).map(_ref3=>{let[strategy,count]=_ref3;return/*#__PURE__*/_jsxs(\"div\",{className:\"strategy-bar\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"strategy-label\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"strategy-icon\",children:[strategy==='momentum'&&'📈',strategy==='mean_reversion'&&'🔄',strategy==='arbitrage'&&'⚖️',strategy==='scalping'&&'⚡',strategy==='swing'&&'🎯',strategy==='value'&&'💰',strategy==='growth'&&'🌱',strategy==='contrarian'&&'🔄',strategy==='trend_following'&&'📊',strategy==='breakout'&&'🚀']}),/*#__PURE__*/_jsx(\"span\",{className:\"strategy-name\",children:strategy.replace('_',' ')})]}),/*#__PURE__*/_jsx(\"div\",{className:\"strategy-progress\",children:/*#__PURE__*/_jsx(\"div\",{className:\"strategy-fill\",style:{width:\"\".concat(count/sentiment.totalTraders*100,\"%\"),backgroundColor:getStrategyColor(strategy)}})}),/*#__PURE__*/_jsx(\"span\",{className:\"strategy-count\",children:count})]},strategy);})})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"sentiment-alerts\",children:[sentiment.fomoCount>sentiment.totalTraders*0.3&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-fomo\",children:[\"\\uD83D\\uDEA8 FOMO Alert: \",sentiment.fomoCount,\" traders experiencing FOMO\"]}),sentiment.panicCount>sentiment.totalTraders*0.2&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-panic\",children:[\"\\u26A0\\uFE0F Panic Alert: \",sentiment.panicCount,\" traders in panic mode\"]}),sentiment.greedyCount>sentiment.totalTraders*0.25&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-greed\",children:[\"\\uD83D\\uDCB0 Greed Alert: \",sentiment.greedyCount,\" traders showing greed\"]}),sentiment.fearfulCount>sentiment.totalTraders*0.25&&/*#__PURE__*/_jsxs(\"div\",{className:\"alert alert-fear\",children:[\"\\uD83D\\uDE28 Fear Alert: \",sentiment.fearfulCount,\" traders fearful\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"market-mood\",children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Current Market Mood\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mood-indicators\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"mood-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mood-icon\",children:\"\\uD83D\\uDCC8\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mood-label\",children:\"Momentum\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"mood-value\",children:[sentiment.strategies.momentum||0,\" traders\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mood-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mood-icon\",children:\"\\uD83D\\uDD04\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mood-label\",children:\"Contrarian\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"mood-value\",children:[sentiment.strategies.contrarian||0,\" traders\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mood-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mood-icon\",children:\"\\u26A1\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mood-label\",children:\"Active\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"mood-value\",children:[aiTraders.filter(t=>t.isActive).length,\" traders\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mood-item\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mood-icon\",children:\"\\uD83D\\uDCB0\"}),/*#__PURE__*/_jsx(\"span\",{className:\"mood-label\",children:\"Profitable\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"mood-value\",children:[aiTraders.filter(t=>t.profitLoss>0).length,\" traders\"]})]})]})]})]});};export default MarketSentiment;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","MarketSentiment","_ref","aiTraders","commodities","onClose","calculateMarketSentiment","totalTraders","length","emotions","reduce","acc","trader","emotionalState","strategies","strategy","avgEmotionalIntensity","sum","emotionalIntensity","fomoCount","fomo","panicCount","panic","greedyCount","greedy","fearfulCount","fearful","sentimentScore","excited","calm","Math","max","min","sentiment","getSentimentColor","score","getSentimentLabel","getEmotionColor","emotion","colors","getStrategyColor","momentum","mean_reversion","arbitrage","scalping","swing","value","growth","contrarian","trend_following","breakout","className","children","onClick","title","style","backgroundColor","transform","concat","abs","toFixed","Object","entries","map","_ref2","count","width","_ref3","replace","filter","t","isActive","profitLoss"],"sources":["F:/Windsurf/Native/GTC 3/src/components/MarketSentiment.js"],"sourcesContent":["import React from 'react';\r\nimport './MarketSentiment.css';\r\n\r\nconst MarketSentiment = ({ aiTraders, commodities, onClose }) => {\r\n  // Calculate market sentiment metrics\r\n  const calculateMarketSentiment = () => {\r\n    const totalTraders = aiTraders.length;\r\n    \r\n    // Emotional distribution\r\n    const emotions = aiTraders.reduce((acc, trader) => {\r\n      acc[trader.emotionalState] = (acc[trader.emotionalState] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Strategy distribution\r\n    const strategies = aiTraders.reduce((acc, trader) => {\r\n      acc[trader.strategy] = (acc[trader.strategy] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Average emotional intensity\r\n    const avgEmotionalIntensity = aiTraders.reduce((sum, trader) => sum + trader.emotionalIntensity, 0) / totalTraders;\r\n    \r\n    // FOMO and panic levels\r\n    const fomoCount = emotions.fomo || 0;\r\n    const panicCount = emotions.panic || 0;\r\n    const greedyCount = emotions.greedy || 0;\r\n    const fearfulCount = emotions.fearful || 0;\r\n    \r\n    // Overall sentiment score (-1 to 1, where -1 is very bearish, 1 is very bullish)\r\n    let sentimentScore = 0;\r\n    \r\n    // Positive emotions contribute positively\r\n    sentimentScore += (emotions.excited || 0) * 0.3;\r\n    sentimentScore += (emotions.greedy || 0) * 0.2;\r\n    sentimentScore += (emotions.calm || 0) * 0.1;\r\n    \r\n    // Negative emotions contribute negatively\r\n    sentimentScore -= (emotions.fearful || 0) * 0.2;\r\n    sentimentScore -= (emotions.panic || 0) * 0.4;\r\n    sentimentScore -= (emotions.fomo || 0) * 0.1; // FOMO can be both positive and negative\r\n    \r\n    // Normalize to -1 to 1 range\r\n    sentimentScore = Math.max(-1, Math.min(1, sentimentScore / totalTraders));\r\n    \r\n    return {\r\n      emotions,\r\n      strategies,\r\n      avgEmotionalIntensity,\r\n      fomoCount,\r\n      panicCount,\r\n      greedyCount,\r\n      fearfulCount,\r\n      sentimentScore,\r\n      totalTraders\r\n    };\r\n  };\r\n\r\n  const sentiment = calculateMarketSentiment();\r\n  \r\n  const getSentimentColor = (score) => {\r\n    if (score > 0.3) return '#00ff88';\r\n    if (score > 0) return '#ffaa00';\r\n    if (score > -0.3) return '#ffaa00';\r\n    return '#ff4444';\r\n  };\r\n\r\n  const getSentimentLabel = (score) => {\r\n    if (score > 0.5) return 'Very Bullish';\r\n    if (score > 0.2) return 'Bullish';\r\n    if (score > -0.2) return 'Neutral';\r\n    if (score > -0.5) return 'Bearish';\r\n    return 'Very Bearish';\r\n  };\r\n\r\n  const getEmotionColor = (emotion) => {\r\n    const colors = {\r\n      calm: '#4CAF50',\r\n      excited: '#FF9800',\r\n      fearful: '#9C27B0',\r\n      greedy: '#FF5722',\r\n      panic: '#F44336',\r\n      fomo: '#E91E63'\r\n    };\r\n    return colors[emotion] || '#757575';\r\n  };\r\n\r\n  const getStrategyColor = (strategy) => {\r\n    const colors = {\r\n      momentum: '#2196F3',\r\n      mean_reversion: '#4CAF50',\r\n      arbitrage: '#FF9800',\r\n      scalping: '#9C27B0',\r\n      swing: '#607D8B',\r\n      value: '#795548',\r\n      growth: '#00BCD4',\r\n      contrarian: '#FF5722',\r\n      trend_following: '#3F51B5',\r\n      breakout: '#E91E63'\r\n    };\r\n    return colors[strategy] || '#757575';\r\n  };\r\n\r\n  return (\r\n    <div className=\"market-sentiment\">\r\n      <div className=\"sentiment-header\">\r\n        <h3>📊 Market Sentiment</h3>\r\n        {onClose && (\r\n          <button \r\n            className=\"sentiment-close-btn\"\r\n            onClick={onClose}\r\n            title=\"Close Market Sentiment\"\r\n          >\r\n            ×\r\n          </button>\r\n        )}\r\n        <div className=\"sentiment-score\">\r\n          <div \r\n            className=\"sentiment-indicator\"\r\n            style={{ \r\n              backgroundColor: getSentimentColor(sentiment.sentimentScore),\r\n              transform: `scale(${1 + Math.abs(sentiment.sentimentScore) * 0.3})`\r\n            }}\r\n          />\r\n          <span className=\"sentiment-label\">{getSentimentLabel(sentiment.sentimentScore)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-metrics\">\r\n        <div className=\"metric-row\">\r\n          <div className=\"metric-item\">\r\n            <span className=\"metric-label\">Emotional Intensity</span>\r\n            <span className=\"metric-value\">{(sentiment.avgEmotionalIntensity * 100).toFixed(1)}%</span>\r\n          </div>\r\n          <div className=\"metric-item\">\r\n            <span className=\"metric-label\">Active Traders</span>\r\n            <span className=\"metric-value\">{sentiment.totalTraders}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-charts\">\r\n        <div className=\"chart-section\">\r\n          <h4>Emotional Distribution</h4>\r\n          <div className=\"emotion-chart\">\r\n            {Object.entries(sentiment.emotions).map(([emotion, count]) => (\r\n              <div key={emotion} className=\"emotion-bar\">\r\n                <div className=\"emotion-label\">\r\n                  <span className=\"emotion-icon\">\r\n                    {emotion === 'calm' && '😐'}\r\n                    {emotion === 'excited' && '🤩'}\r\n                    {emotion === 'fearful' && '😨'}\r\n                    {emotion === 'greedy' && '😈'}\r\n                    {emotion === 'panic' && '😱'}\r\n                    {emotion === 'fomo' && '😰'}\r\n                  </span>\r\n                  <span className=\"emotion-name\">{emotion}</span>\r\n                </div>\r\n                <div className=\"emotion-progress\">\r\n                  <div \r\n                    className=\"emotion-fill\"\r\n                    style={{ \r\n                      width: `${(count / sentiment.totalTraders) * 100}%`,\r\n                      backgroundColor: getEmotionColor(emotion)\r\n                    }}\r\n                  />\r\n                </div>\r\n                <span className=\"emotion-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chart-section\">\r\n          <h4>Strategy Distribution</h4>\r\n          <div className=\"strategy-chart\">\r\n            {Object.entries(sentiment.strategies).map(([strategy, count]) => (\r\n              <div key={strategy} className=\"strategy-bar\">\r\n                <div className=\"strategy-label\">\r\n                  <span className=\"strategy-icon\">\r\n                    {strategy === 'momentum' && '📈'}\r\n                    {strategy === 'mean_reversion' && '🔄'}\r\n                    {strategy === 'arbitrage' && '⚖️'}\r\n                    {strategy === 'scalping' && '⚡'}\r\n                    {strategy === 'swing' && '🎯'}\r\n                    {strategy === 'value' && '💰'}\r\n                    {strategy === 'growth' && '🌱'}\r\n                    {strategy === 'contrarian' && '🔄'}\r\n                    {strategy === 'trend_following' && '📊'}\r\n                    {strategy === 'breakout' && '🚀'}\r\n                  </span>\r\n                  <span className=\"strategy-name\">{strategy.replace('_', ' ')}</span>\r\n                </div>\r\n                <div className=\"strategy-progress\">\r\n                  <div \r\n                    className=\"strategy-fill\"\r\n                    style={{ \r\n                      width: `${(count / sentiment.totalTraders) * 100}%`,\r\n                      backgroundColor: getStrategyColor(strategy)\r\n                    }}\r\n                  />\r\n                </div>\r\n                <span className=\"strategy-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-alerts\">\r\n        {sentiment.fomoCount > sentiment.totalTraders * 0.3 && (\r\n          <div className=\"alert alert-fomo\">\r\n            🚨 FOMO Alert: {sentiment.fomoCount} traders experiencing FOMO\r\n          </div>\r\n        )}\r\n        {sentiment.panicCount > sentiment.totalTraders * 0.2 && (\r\n          <div className=\"alert alert-panic\">\r\n            ⚠️ Panic Alert: {sentiment.panicCount} traders in panic mode\r\n          </div>\r\n        )}\r\n        {sentiment.greedyCount > sentiment.totalTraders * 0.25 && (\r\n          <div className=\"alert alert-greed\">\r\n            💰 Greed Alert: {sentiment.greedyCount} traders showing greed\r\n          </div>\r\n        )}\r\n        {sentiment.fearfulCount > sentiment.totalTraders * 0.25 && (\r\n          <div className=\"alert alert-fear\">\r\n            😨 Fear Alert: {sentiment.fearfulCount} traders fearful\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"market-mood\">\r\n        <h4>Current Market Mood</h4>\r\n        <div className=\"mood-indicators\">\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">📈</span>\r\n            <span className=\"mood-label\">Momentum</span>\r\n            <span className=\"mood-value\">\r\n              {sentiment.strategies.momentum || 0} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">🔄</span>\r\n            <span className=\"mood-label\">Contrarian</span>\r\n            <span className=\"mood-value\">\r\n              {sentiment.strategies.contrarian || 0} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">⚡</span>\r\n            <span className=\"mood-label\">Active</span>\r\n            <span className=\"mood-value\">\r\n              {aiTraders.filter(t => t.isActive).length} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">💰</span>\r\n            <span className=\"mood-label\">Profitable</span>\r\n            <span className=\"mood-value\">\r\n              {aiTraders.filter(t => t.profitLoss > 0).length} traders\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketSentiment;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,uBAAuB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE/B,KAAM,CAAAC,eAAe,CAAGC,IAAA,EAAyC,IAAxC,CAAEC,SAAS,CAAEC,WAAW,CAAEC,OAAQ,CAAC,CAAAH,IAAA,CAC1D;AACA,KAAM,CAAAI,wBAAwB,CAAGA,CAAA,GAAM,CACrC,KAAM,CAAAC,YAAY,CAAGJ,SAAS,CAACK,MAAM,CAErC;AACA,KAAM,CAAAC,QAAQ,CAAGN,SAAS,CAACO,MAAM,CAAC,CAACC,GAAG,CAAEC,MAAM,GAAK,CACjDD,GAAG,CAACC,MAAM,CAACC,cAAc,CAAC,CAAG,CAACF,GAAG,CAACC,MAAM,CAACC,cAAc,CAAC,EAAI,CAAC,EAAI,CAAC,CAClE,MAAO,CAAAF,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN;AACA,KAAM,CAAAG,UAAU,CAAGX,SAAS,CAACO,MAAM,CAAC,CAACC,GAAG,CAAEC,MAAM,GAAK,CACnDD,GAAG,CAACC,MAAM,CAACG,QAAQ,CAAC,CAAG,CAACJ,GAAG,CAACC,MAAM,CAACG,QAAQ,CAAC,EAAI,CAAC,EAAI,CAAC,CACtD,MAAO,CAAAJ,GAAG,CACZ,CAAC,CAAE,CAAC,CAAC,CAAC,CAEN;AACA,KAAM,CAAAK,qBAAqB,CAAGb,SAAS,CAACO,MAAM,CAAC,CAACO,GAAG,CAAEL,MAAM,GAAKK,GAAG,CAAGL,MAAM,CAACM,kBAAkB,CAAE,CAAC,CAAC,CAAGX,YAAY,CAElH;AACA,KAAM,CAAAY,SAAS,CAAGV,QAAQ,CAACW,IAAI,EAAI,CAAC,CACpC,KAAM,CAAAC,UAAU,CAAGZ,QAAQ,CAACa,KAAK,EAAI,CAAC,CACtC,KAAM,CAAAC,WAAW,CAAGd,QAAQ,CAACe,MAAM,EAAI,CAAC,CACxC,KAAM,CAAAC,YAAY,CAAGhB,QAAQ,CAACiB,OAAO,EAAI,CAAC,CAE1C;AACA,GAAI,CAAAC,cAAc,CAAG,CAAC,CAEtB;AACAA,cAAc,EAAI,CAAClB,QAAQ,CAACmB,OAAO,EAAI,CAAC,EAAI,GAAG,CAC/CD,cAAc,EAAI,CAAClB,QAAQ,CAACe,MAAM,EAAI,CAAC,EAAI,GAAG,CAC9CG,cAAc,EAAI,CAAClB,QAAQ,CAACoB,IAAI,EAAI,CAAC,EAAI,GAAG,CAE5C;AACAF,cAAc,EAAI,CAAClB,QAAQ,CAACiB,OAAO,EAAI,CAAC,EAAI,GAAG,CAC/CC,cAAc,EAAI,CAAClB,QAAQ,CAACa,KAAK,EAAI,CAAC,EAAI,GAAG,CAC7CK,cAAc,EAAI,CAAClB,QAAQ,CAACW,IAAI,EAAI,CAAC,EAAI,GAAG,CAAE;AAE9C;AACAO,cAAc,CAAGG,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAED,IAAI,CAACE,GAAG,CAAC,CAAC,CAAEL,cAAc,CAAGpB,YAAY,CAAC,CAAC,CAEzE,MAAO,CACLE,QAAQ,CACRK,UAAU,CACVE,qBAAqB,CACrBG,SAAS,CACTE,UAAU,CACVE,WAAW,CACXE,YAAY,CACZE,cAAc,CACdpB,YACF,CAAC,CACH,CAAC,CAED,KAAM,CAAA0B,SAAS,CAAG3B,wBAAwB,CAAC,CAAC,CAE5C,KAAM,CAAA4B,iBAAiB,CAAIC,KAAK,EAAK,CACnC,GAAIA,KAAK,CAAG,GAAG,CAAE,MAAO,SAAS,CACjC,GAAIA,KAAK,CAAG,CAAC,CAAE,MAAO,SAAS,CAC/B,GAAIA,KAAK,CAAG,CAAC,GAAG,CAAE,MAAO,SAAS,CAClC,MAAO,SAAS,CAClB,CAAC,CAED,KAAM,CAAAC,iBAAiB,CAAID,KAAK,EAAK,CACnC,GAAIA,KAAK,CAAG,GAAG,CAAE,MAAO,cAAc,CACtC,GAAIA,KAAK,CAAG,GAAG,CAAE,MAAO,SAAS,CACjC,GAAIA,KAAK,CAAG,CAAC,GAAG,CAAE,MAAO,SAAS,CAClC,GAAIA,KAAK,CAAG,CAAC,GAAG,CAAE,MAAO,SAAS,CAClC,MAAO,cAAc,CACvB,CAAC,CAED,KAAM,CAAAE,eAAe,CAAIC,OAAO,EAAK,CACnC,KAAM,CAAAC,MAAM,CAAG,CACbV,IAAI,CAAE,SAAS,CACfD,OAAO,CAAE,SAAS,CAClBF,OAAO,CAAE,SAAS,CAClBF,MAAM,CAAE,SAAS,CACjBF,KAAK,CAAE,SAAS,CAChBF,IAAI,CAAE,SACR,CAAC,CACD,MAAO,CAAAmB,MAAM,CAACD,OAAO,CAAC,EAAI,SAAS,CACrC,CAAC,CAED,KAAM,CAAAE,gBAAgB,CAAIzB,QAAQ,EAAK,CACrC,KAAM,CAAAwB,MAAM,CAAG,CACbE,QAAQ,CAAE,SAAS,CACnBC,cAAc,CAAE,SAAS,CACzBC,SAAS,CAAE,SAAS,CACpBC,QAAQ,CAAE,SAAS,CACnBC,KAAK,CAAE,SAAS,CAChBC,KAAK,CAAE,SAAS,CAChBC,MAAM,CAAE,SAAS,CACjBC,UAAU,CAAE,SAAS,CACrBC,eAAe,CAAE,SAAS,CAC1BC,QAAQ,CAAE,SACZ,CAAC,CACD,MAAO,CAAAX,MAAM,CAACxB,QAAQ,CAAC,EAAI,SAAS,CACtC,CAAC,CAED,mBACEf,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BpD,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BtD,IAAA,OAAAsD,QAAA,CAAI,+BAAmB,CAAI,CAAC,CAC3B/C,OAAO,eACNP,IAAA,WACEqD,SAAS,CAAC,qBAAqB,CAC/BE,OAAO,CAAEhD,OAAQ,CACjBiD,KAAK,CAAC,wBAAwB,CAAAF,QAAA,CAC/B,MAED,CAAQ,CACT,cACDpD,KAAA,QAAKmD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BtD,IAAA,QACEqD,SAAS,CAAC,qBAAqB,CAC/BI,KAAK,CAAE,CACLC,eAAe,CAAEtB,iBAAiB,CAACD,SAAS,CAACN,cAAc,CAAC,CAC5D8B,SAAS,UAAAC,MAAA,CAAW,CAAC,CAAG5B,IAAI,CAAC6B,GAAG,CAAC1B,SAAS,CAACN,cAAc,CAAC,CAAG,GAAG,KAClE,CAAE,CACH,CAAC,cACF7B,IAAA,SAAMqD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,CAAEhB,iBAAiB,CAACH,SAAS,CAACN,cAAc,CAAC,CAAO,CAAC,EACnF,CAAC,EACH,CAAC,cAEN7B,IAAA,QAAKqD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCpD,KAAA,QAAKmD,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBpD,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtD,IAAA,SAAMqD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,qBAAmB,CAAM,CAAC,cACzDpD,KAAA,SAAMmD,SAAS,CAAC,cAAc,CAAAC,QAAA,EAAE,CAACnB,SAAS,CAACjB,qBAAqB,CAAG,GAAG,EAAE4C,OAAO,CAAC,CAAC,CAAC,CAAC,GAAC,EAAM,CAAC,EACxF,CAAC,cACN5D,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtD,IAAA,SAAMqD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,gBAAc,CAAM,CAAC,cACpDtD,IAAA,SAAMqD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEnB,SAAS,CAAC1B,YAAY,CAAO,CAAC,EAC3D,CAAC,EACH,CAAC,CACH,CAAC,cAENP,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,eAC/BpD,KAAA,QAAKmD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BtD,IAAA,OAAAsD,QAAA,CAAI,wBAAsB,CAAI,CAAC,cAC/BtD,IAAA,QAAKqD,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC3BS,MAAM,CAACC,OAAO,CAAC7B,SAAS,CAACxB,QAAQ,CAAC,CAACsD,GAAG,CAACC,KAAA,MAAC,CAAC1B,OAAO,CAAE2B,KAAK,CAAC,CAAAD,KAAA,oBACvDhE,KAAA,QAAmBmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eACxCpD,KAAA,QAAKmD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BpD,KAAA,SAAMmD,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC3Bd,OAAO,GAAK,MAAM,EAAI,IAAI,CAC1BA,OAAO,GAAK,SAAS,EAAI,IAAI,CAC7BA,OAAO,GAAK,SAAS,EAAI,IAAI,CAC7BA,OAAO,GAAK,QAAQ,EAAI,IAAI,CAC5BA,OAAO,GAAK,OAAO,EAAI,IAAI,CAC3BA,OAAO,GAAK,MAAM,EAAI,IAAI,EACvB,CAAC,cACPxC,IAAA,SAAMqD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEd,OAAO,CAAO,CAAC,EAC5C,CAAC,cACNxC,IAAA,QAAKqD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAC/BtD,IAAA,QACEqD,SAAS,CAAC,cAAc,CACxBI,KAAK,CAAE,CACLW,KAAK,IAAAR,MAAA,CAAMO,KAAK,CAAGhC,SAAS,CAAC1B,YAAY,CAAI,GAAG,KAAG,CACnDiD,eAAe,CAAEnB,eAAe,CAACC,OAAO,CAC1C,CAAE,CACH,CAAC,CACC,CAAC,cACNxC,IAAA,SAAMqD,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAEa,KAAK,CAAO,CAAC,GArBtC3B,OAsBL,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,cAENtC,KAAA,QAAKmD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BtD,IAAA,OAAAsD,QAAA,CAAI,uBAAqB,CAAI,CAAC,cAC9BtD,IAAA,QAAKqD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAC5BS,MAAM,CAACC,OAAO,CAAC7B,SAAS,CAACnB,UAAU,CAAC,CAACiD,GAAG,CAACI,KAAA,MAAC,CAACpD,QAAQ,CAAEkD,KAAK,CAAC,CAAAE,KAAA,oBAC1DnE,KAAA,QAAoBmD,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC1CpD,KAAA,QAAKmD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BpD,KAAA,SAAMmD,SAAS,CAAC,eAAe,CAAAC,QAAA,EAC5BrC,QAAQ,GAAK,UAAU,EAAI,IAAI,CAC/BA,QAAQ,GAAK,gBAAgB,EAAI,IAAI,CACrCA,QAAQ,GAAK,WAAW,EAAI,IAAI,CAChCA,QAAQ,GAAK,UAAU,EAAI,GAAG,CAC9BA,QAAQ,GAAK,OAAO,EAAI,IAAI,CAC5BA,QAAQ,GAAK,OAAO,EAAI,IAAI,CAC5BA,QAAQ,GAAK,QAAQ,EAAI,IAAI,CAC7BA,QAAQ,GAAK,YAAY,EAAI,IAAI,CACjCA,QAAQ,GAAK,iBAAiB,EAAI,IAAI,CACtCA,QAAQ,GAAK,UAAU,EAAI,IAAI,EAC5B,CAAC,cACPjB,IAAA,SAAMqD,SAAS,CAAC,eAAe,CAAAC,QAAA,CAAErC,QAAQ,CAACqD,OAAO,CAAC,GAAG,CAAE,GAAG,CAAC,CAAO,CAAC,EAChE,CAAC,cACNtE,IAAA,QAAKqD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,cAChCtD,IAAA,QACEqD,SAAS,CAAC,eAAe,CACzBI,KAAK,CAAE,CACLW,KAAK,IAAAR,MAAA,CAAMO,KAAK,CAAGhC,SAAS,CAAC1B,YAAY,CAAI,GAAG,KAAG,CACnDiD,eAAe,CAAEhB,gBAAgB,CAACzB,QAAQ,CAC5C,CAAE,CACH,CAAC,CACC,CAAC,cACNjB,IAAA,SAAMqD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,CAAEa,KAAK,CAAO,CAAC,GAzBvClD,QA0BL,CAAC,EACP,CAAC,CACC,CAAC,EACH,CAAC,EACH,CAAC,cAENf,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAC9BnB,SAAS,CAACd,SAAS,CAAGc,SAAS,CAAC1B,YAAY,CAAG,GAAG,eACjDP,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,2BACjB,CAACnB,SAAS,CAACd,SAAS,CAAC,4BACtC,EAAK,CACN,CACAc,SAAS,CAACZ,UAAU,CAAGY,SAAS,CAAC1B,YAAY,CAAG,GAAG,eAClDP,KAAA,QAAKmD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAAC,4BACjB,CAACnB,SAAS,CAACZ,UAAU,CAAC,wBACxC,EAAK,CACN,CACAY,SAAS,CAACV,WAAW,CAAGU,SAAS,CAAC1B,YAAY,CAAG,IAAI,eACpDP,KAAA,QAAKmD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAAC,4BACjB,CAACnB,SAAS,CAACV,WAAW,CAAC,wBACzC,EAAK,CACN,CACAU,SAAS,CAACR,YAAY,CAAGQ,SAAS,CAAC1B,YAAY,CAAG,IAAI,eACrDP,KAAA,QAAKmD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAAC,2BACjB,CAACnB,SAAS,CAACR,YAAY,CAAC,kBACzC,EAAK,CACN,EACE,CAAC,cAENzB,KAAA,QAAKmD,SAAS,CAAC,aAAa,CAAAC,QAAA,eAC1BtD,IAAA,OAAAsD,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BpD,KAAA,QAAKmD,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BpD,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtD,IAAA,SAAMqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACrCtD,IAAA,SAAMqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,UAAQ,CAAM,CAAC,cAC5CpD,KAAA,SAAMmD,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBnB,SAAS,CAACnB,UAAU,CAAC2B,QAAQ,EAAI,CAAC,CAAC,UACtC,EAAM,CAAC,EACJ,CAAC,cACNzC,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtD,IAAA,SAAMqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACrCtD,IAAA,SAAMqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,cAC9CpD,KAAA,SAAMmD,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBnB,SAAS,CAACnB,UAAU,CAACkC,UAAU,EAAI,CAAC,CAAC,UACxC,EAAM,CAAC,EACJ,CAAC,cACNhD,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtD,IAAA,SAAMqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,QAAC,CAAM,CAAC,cACpCtD,IAAA,SAAMqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,QAAM,CAAM,CAAC,cAC1CpD,KAAA,SAAMmD,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBjD,SAAS,CAACkE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACC,QAAQ,CAAC,CAAC/D,MAAM,CAAC,UAC5C,EAAM,CAAC,EACJ,CAAC,cACNR,KAAA,QAAKmD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBtD,IAAA,SAAMqD,SAAS,CAAC,WAAW,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACrCtD,IAAA,SAAMqD,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,YAAU,CAAM,CAAC,cAC9CpD,KAAA,SAAMmD,SAAS,CAAC,YAAY,CAAAC,QAAA,EACzBjD,SAAS,CAACkE,MAAM,CAACC,CAAC,EAAIA,CAAC,CAACE,UAAU,CAAG,CAAC,CAAC,CAAChE,MAAM,CAAC,UAClD,EAAM,CAAC,EACJ,CAAC,EACH,CAAC,EACH,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAP,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}