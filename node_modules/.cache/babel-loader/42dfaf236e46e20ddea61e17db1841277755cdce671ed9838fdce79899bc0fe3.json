{"ast":null,"code":"var _jsxFileName = \"F:\\\\Windsurf\\\\Native\\\\GTC 3\\\\src\\\\components\\\\MarketSentiment.js\";\nimport React from 'react';\nimport './MarketSentiment.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MarketSentiment = ({\n  aiTraders,\n  commodities,\n  onClose\n}) => {\n  // Calculate market sentiment metrics\n  const calculateMarketSentiment = () => {\n    const totalTraders = aiTraders.length;\n\n    // Emotional distribution\n    const emotions = aiTraders.reduce((acc, trader) => {\n      acc[trader.emotionalState] = (acc[trader.emotionalState] || 0) + 1;\n      return acc;\n    }, {});\n\n    // Strategy distribution\n    const strategies = aiTraders.reduce((acc, trader) => {\n      acc[trader.strategy] = (acc[trader.strategy] || 0) + 1;\n      return acc;\n    }, {});\n\n    // Average emotional intensity\n    const avgEmotionalIntensity = aiTraders.reduce((sum, trader) => sum + trader.emotionalIntensity, 0) / totalTraders;\n\n    // FOMO and panic levels\n    const fomoCount = emotions.fomo || 0;\n    const panicCount = emotions.panic || 0;\n    const greedyCount = emotions.greedy || 0;\n    const fearfulCount = emotions.fearful || 0;\n\n    // Overall sentiment score (-1 to 1, where -1 is very bearish, 1 is very bullish)\n    let sentimentScore = 0;\n\n    // Positive emotions contribute positively\n    sentimentScore += (emotions.excited || 0) * 0.3;\n    sentimentScore += (emotions.greedy || 0) * 0.2;\n    sentimentScore += (emotions.calm || 0) * 0.1;\n\n    // Negative emotions contribute negatively\n    sentimentScore -= (emotions.fearful || 0) * 0.2;\n    sentimentScore -= (emotions.panic || 0) * 0.4;\n    sentimentScore -= (emotions.fomo || 0) * 0.1; // FOMO can be both positive and negative\n\n    // Normalize to -1 to 1 range\n    sentimentScore = Math.max(-1, Math.min(1, sentimentScore / totalTraders));\n    return {\n      emotions,\n      strategies,\n      avgEmotionalIntensity,\n      fomoCount,\n      panicCount,\n      greedyCount,\n      fearfulCount,\n      sentimentScore,\n      totalTraders\n    };\n  };\n  const sentiment = calculateMarketSentiment();\n  const getSentimentColor = score => {\n    if (score > 0.3) return '#00ff88';\n    if (score > 0) return '#ffaa00';\n    if (score > -0.3) return '#ffaa00';\n    return '#ff4444';\n  };\n  const getSentimentLabel = score => {\n    if (score > 0.5) return 'Very Bullish';\n    if (score > 0.2) return 'Bullish';\n    if (score > -0.2) return 'Neutral';\n    if (score > -0.5) return 'Bearish';\n    return 'Very Bearish';\n  };\n  const getEmotionColor = emotion => {\n    const colors = {\n      calm: '#4CAF50',\n      excited: '#FF9800',\n      fearful: '#9C27B0',\n      greedy: '#FF5722',\n      panic: '#F44336',\n      fomo: '#E91E63'\n    };\n    return colors[emotion] || '#757575';\n  };\n  const getStrategyColor = strategy => {\n    const colors = {\n      momentum: '#2196F3',\n      mean_reversion: '#4CAF50',\n      arbitrage: '#FF9800',\n      scalping: '#9C27B0',\n      swing: '#607D8B',\n      value: '#795548',\n      growth: '#00BCD4',\n      contrarian: '#FF5722',\n      trend_following: '#3F51B5',\n      breakout: '#E91E63'\n    };\n    return colors[strategy] || '#757575';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"market-sentiment\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sentiment-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uD83D\\uDCCA Market Sentiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), onClose && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"sentiment-close-btn\",\n        onClick: onClose,\n        title: \"Close Market Sentiment\",\n        children: \"\\xD7\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sentiment-score\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sentiment-indicator\",\n          style: {\n            backgroundColor: getSentimentColor(sentiment.sentimentScore),\n            transform: `scale(${1 + Math.abs(sentiment.sentimentScore) * 0.3})`\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"sentiment-label\",\n          children: getSentimentLabel(sentiment.sentimentScore)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sentiment-metrics\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"metric-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Emotional Intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: [(sentiment.avgEmotionalIntensity * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metric-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-label\",\n            children: \"Active Traders\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"metric-value\",\n            children: sentiment.totalTraders\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sentiment-charts\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Emotional Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"emotion-chart\",\n          children: Object.entries(sentiment.emotions).map(([emotion, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emotion-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"emotion-icon\",\n                children: [emotion === 'calm' && 'üòê', emotion === 'excited' && 'ü§©', emotion === 'fearful' && 'üò®', emotion === 'greedy' && 'üòà', emotion === 'panic' && 'üò±', emotion === 'fomo' && 'üò∞']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"emotion-name\",\n                children: emotion\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"emotion-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"emotion-fill\",\n                style: {\n                  width: `${count / sentiment.totalTraders * 100}%`,\n                  backgroundColor: getEmotionColor(emotion)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"emotion-count\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)]\n          }, emotion, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chart-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Strategy Distribution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"strategy-chart\",\n          children: Object.entries(sentiment.strategies).map(([strategy, count]) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"strategy-bar\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"strategy-label\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"strategy-icon\",\n                children: [strategy === 'momentum' && 'üìà', strategy === 'mean_reversion' && 'üîÑ', strategy === 'arbitrage' && '‚öñÔ∏è', strategy === 'scalping' && '‚ö°', strategy === 'swing' && 'üéØ', strategy === 'value' && 'üí∞', strategy === 'growth' && 'üå±', strategy === 'contrarian' && 'üîÑ', strategy === 'trend_following' && 'üìä', strategy === 'breakout' && 'üöÄ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"strategy-name\",\n                children: strategy.replace('_', ' ')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"strategy-progress\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"strategy-fill\",\n                style: {\n                  width: `${count / sentiment.totalTraders * 100}%`,\n                  backgroundColor: getStrategyColor(strategy)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"strategy-count\",\n              children: count\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)]\n          }, strategy, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sentiment-alerts\",\n      children: [sentiment.fomoCount > sentiment.totalTraders * 0.3 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-fomo\",\n        children: [\"\\uD83D\\uDEA8 FOMO Alert: \", sentiment.fomoCount, \" traders experiencing FOMO\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 11\n      }, this), sentiment.panicCount > sentiment.totalTraders * 0.2 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-panic\",\n        children: [\"\\u26A0\\uFE0F Panic Alert: \", sentiment.panicCount, \" traders in panic mode\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), sentiment.greedyCount > sentiment.totalTraders * 0.25 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-greed\",\n        children: [\"\\uD83D\\uDCB0 Greed Alert: \", sentiment.greedyCount, \" traders showing greed\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), sentiment.fearfulCount > sentiment.totalTraders * 0.25 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-fear\",\n        children: [\"\\uD83D\\uDE28 Fear Alert: \", sentiment.fearfulCount, \" traders fearful\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"market-mood\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Current Market Mood\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mood-indicators\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-icon\",\n            children: \"\\uD83D\\uDCC8\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-label\",\n            children: \"Momentum\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-value\",\n            children: [sentiment.strategies.momentum || 0, \" traders\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-icon\",\n            children: \"\\uD83D\\uDD04\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-label\",\n            children: \"Contrarian\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-value\",\n            children: [sentiment.strategies.contrarian || 0, \" traders\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-icon\",\n            children: \"\\u26A1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-label\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-value\",\n            children: [aiTraders.filter(t => t.isActive).length, \" traders\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mood-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-icon\",\n            children: \"\\uD83D\\uDCB0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-label\",\n            children: \"Profitable\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"mood-value\",\n            children: [aiTraders.filter(t => t.profitLoss > 0).length, \" traders\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_c = MarketSentiment;\nexport default MarketSentiment;\nvar _c;\n$RefreshReg$(_c, \"MarketSentiment\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MarketSentiment","aiTraders","commodities","onClose","calculateMarketSentiment","totalTraders","length","emotions","reduce","acc","trader","emotionalState","strategies","strategy","avgEmotionalIntensity","sum","emotionalIntensity","fomoCount","fomo","panicCount","panic","greedyCount","greedy","fearfulCount","fearful","sentimentScore","excited","calm","Math","max","min","sentiment","getSentimentColor","score","getSentimentLabel","getEmotionColor","emotion","colors","getStrategyColor","momentum","mean_reversion","arbitrage","scalping","swing","value","growth","contrarian","trend_following","breakout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","title","style","backgroundColor","transform","abs","toFixed","Object","entries","map","count","width","replace","filter","t","isActive","profitLoss","_c","$RefreshReg$"],"sources":["F:/Windsurf/Native/GTC 3/src/components/MarketSentiment.js"],"sourcesContent":["import React from 'react';\r\nimport './MarketSentiment.css';\r\n\r\nconst MarketSentiment = ({ aiTraders, commodities, onClose }) => {\r\n  // Calculate market sentiment metrics\r\n  const calculateMarketSentiment = () => {\r\n    const totalTraders = aiTraders.length;\r\n    \r\n    // Emotional distribution\r\n    const emotions = aiTraders.reduce((acc, trader) => {\r\n      acc[trader.emotionalState] = (acc[trader.emotionalState] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Strategy distribution\r\n    const strategies = aiTraders.reduce((acc, trader) => {\r\n      acc[trader.strategy] = (acc[trader.strategy] || 0) + 1;\r\n      return acc;\r\n    }, {});\r\n    \r\n    // Average emotional intensity\r\n    const avgEmotionalIntensity = aiTraders.reduce((sum, trader) => sum + trader.emotionalIntensity, 0) / totalTraders;\r\n    \r\n    // FOMO and panic levels\r\n    const fomoCount = emotions.fomo || 0;\r\n    const panicCount = emotions.panic || 0;\r\n    const greedyCount = emotions.greedy || 0;\r\n    const fearfulCount = emotions.fearful || 0;\r\n    \r\n    // Overall sentiment score (-1 to 1, where -1 is very bearish, 1 is very bullish)\r\n    let sentimentScore = 0;\r\n    \r\n    // Positive emotions contribute positively\r\n    sentimentScore += (emotions.excited || 0) * 0.3;\r\n    sentimentScore += (emotions.greedy || 0) * 0.2;\r\n    sentimentScore += (emotions.calm || 0) * 0.1;\r\n    \r\n    // Negative emotions contribute negatively\r\n    sentimentScore -= (emotions.fearful || 0) * 0.2;\r\n    sentimentScore -= (emotions.panic || 0) * 0.4;\r\n    sentimentScore -= (emotions.fomo || 0) * 0.1; // FOMO can be both positive and negative\r\n    \r\n    // Normalize to -1 to 1 range\r\n    sentimentScore = Math.max(-1, Math.min(1, sentimentScore / totalTraders));\r\n    \r\n    return {\r\n      emotions,\r\n      strategies,\r\n      avgEmotionalIntensity,\r\n      fomoCount,\r\n      panicCount,\r\n      greedyCount,\r\n      fearfulCount,\r\n      sentimentScore,\r\n      totalTraders\r\n    };\r\n  };\r\n\r\n  const sentiment = calculateMarketSentiment();\r\n  \r\n  const getSentimentColor = (score) => {\r\n    if (score > 0.3) return '#00ff88';\r\n    if (score > 0) return '#ffaa00';\r\n    if (score > -0.3) return '#ffaa00';\r\n    return '#ff4444';\r\n  };\r\n\r\n  const getSentimentLabel = (score) => {\r\n    if (score > 0.5) return 'Very Bullish';\r\n    if (score > 0.2) return 'Bullish';\r\n    if (score > -0.2) return 'Neutral';\r\n    if (score > -0.5) return 'Bearish';\r\n    return 'Very Bearish';\r\n  };\r\n\r\n  const getEmotionColor = (emotion) => {\r\n    const colors = {\r\n      calm: '#4CAF50',\r\n      excited: '#FF9800',\r\n      fearful: '#9C27B0',\r\n      greedy: '#FF5722',\r\n      panic: '#F44336',\r\n      fomo: '#E91E63'\r\n    };\r\n    return colors[emotion] || '#757575';\r\n  };\r\n\r\n  const getStrategyColor = (strategy) => {\r\n    const colors = {\r\n      momentum: '#2196F3',\r\n      mean_reversion: '#4CAF50',\r\n      arbitrage: '#FF9800',\r\n      scalping: '#9C27B0',\r\n      swing: '#607D8B',\r\n      value: '#795548',\r\n      growth: '#00BCD4',\r\n      contrarian: '#FF5722',\r\n      trend_following: '#3F51B5',\r\n      breakout: '#E91E63'\r\n    };\r\n    return colors[strategy] || '#757575';\r\n  };\r\n\r\n  return (\r\n    <div className=\"market-sentiment\">\r\n      <div className=\"sentiment-header\">\r\n        <h3>üìä Market Sentiment</h3>\r\n        {onClose && (\r\n          <button \r\n            className=\"sentiment-close-btn\"\r\n            onClick={onClose}\r\n            title=\"Close Market Sentiment\"\r\n          >\r\n            √ó\r\n          </button>\r\n        )}\r\n        <div className=\"sentiment-score\">\r\n          <div \r\n            className=\"sentiment-indicator\"\r\n            style={{ \r\n              backgroundColor: getSentimentColor(sentiment.sentimentScore),\r\n              transform: `scale(${1 + Math.abs(sentiment.sentimentScore) * 0.3})`\r\n            }}\r\n          />\r\n          <span className=\"sentiment-label\">{getSentimentLabel(sentiment.sentimentScore)}</span>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-metrics\">\r\n        <div className=\"metric-row\">\r\n          <div className=\"metric-item\">\r\n            <span className=\"metric-label\">Emotional Intensity</span>\r\n            <span className=\"metric-value\">{(sentiment.avgEmotionalIntensity * 100).toFixed(1)}%</span>\r\n          </div>\r\n          <div className=\"metric-item\">\r\n            <span className=\"metric-label\">Active Traders</span>\r\n            <span className=\"metric-value\">{sentiment.totalTraders}</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-charts\">\r\n        <div className=\"chart-section\">\r\n          <h4>Emotional Distribution</h4>\r\n          <div className=\"emotion-chart\">\r\n            {Object.entries(sentiment.emotions).map(([emotion, count]) => (\r\n              <div key={emotion} className=\"emotion-bar\">\r\n                <div className=\"emotion-label\">\r\n                  <span className=\"emotion-icon\">\r\n                    {emotion === 'calm' && 'üòê'}\r\n                    {emotion === 'excited' && 'ü§©'}\r\n                    {emotion === 'fearful' && 'üò®'}\r\n                    {emotion === 'greedy' && 'üòà'}\r\n                    {emotion === 'panic' && 'üò±'}\r\n                    {emotion === 'fomo' && 'üò∞'}\r\n                  </span>\r\n                  <span className=\"emotion-name\">{emotion}</span>\r\n                </div>\r\n                <div className=\"emotion-progress\">\r\n                  <div \r\n                    className=\"emotion-fill\"\r\n                    style={{ \r\n                      width: `${(count / sentiment.totalTraders) * 100}%`,\r\n                      backgroundColor: getEmotionColor(emotion)\r\n                    }}\r\n                  />\r\n                </div>\r\n                <span className=\"emotion-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chart-section\">\r\n          <h4>Strategy Distribution</h4>\r\n          <div className=\"strategy-chart\">\r\n            {Object.entries(sentiment.strategies).map(([strategy, count]) => (\r\n              <div key={strategy} className=\"strategy-bar\">\r\n                <div className=\"strategy-label\">\r\n                  <span className=\"strategy-icon\">\r\n                    {strategy === 'momentum' && 'üìà'}\r\n                    {strategy === 'mean_reversion' && 'üîÑ'}\r\n                    {strategy === 'arbitrage' && '‚öñÔ∏è'}\r\n                    {strategy === 'scalping' && '‚ö°'}\r\n                    {strategy === 'swing' && 'üéØ'}\r\n                    {strategy === 'value' && 'üí∞'}\r\n                    {strategy === 'growth' && 'üå±'}\r\n                    {strategy === 'contrarian' && 'üîÑ'}\r\n                    {strategy === 'trend_following' && 'üìä'}\r\n                    {strategy === 'breakout' && 'üöÄ'}\r\n                  </span>\r\n                  <span className=\"strategy-name\">{strategy.replace('_', ' ')}</span>\r\n                </div>\r\n                <div className=\"strategy-progress\">\r\n                  <div \r\n                    className=\"strategy-fill\"\r\n                    style={{ \r\n                      width: `${(count / sentiment.totalTraders) * 100}%`,\r\n                      backgroundColor: getStrategyColor(strategy)\r\n                    }}\r\n                  />\r\n                </div>\r\n                <span className=\"strategy-count\">{count}</span>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"sentiment-alerts\">\r\n        {sentiment.fomoCount > sentiment.totalTraders * 0.3 && (\r\n          <div className=\"alert alert-fomo\">\r\n            üö® FOMO Alert: {sentiment.fomoCount} traders experiencing FOMO\r\n          </div>\r\n        )}\r\n        {sentiment.panicCount > sentiment.totalTraders * 0.2 && (\r\n          <div className=\"alert alert-panic\">\r\n            ‚ö†Ô∏è Panic Alert: {sentiment.panicCount} traders in panic mode\r\n          </div>\r\n        )}\r\n        {sentiment.greedyCount > sentiment.totalTraders * 0.25 && (\r\n          <div className=\"alert alert-greed\">\r\n            üí∞ Greed Alert: {sentiment.greedyCount} traders showing greed\r\n          </div>\r\n        )}\r\n        {sentiment.fearfulCount > sentiment.totalTraders * 0.25 && (\r\n          <div className=\"alert alert-fear\">\r\n            üò® Fear Alert: {sentiment.fearfulCount} traders fearful\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"market-mood\">\r\n        <h4>Current Market Mood</h4>\r\n        <div className=\"mood-indicators\">\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">üìà</span>\r\n            <span className=\"mood-label\">Momentum</span>\r\n            <span className=\"mood-value\">\r\n              {sentiment.strategies.momentum || 0} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">üîÑ</span>\r\n            <span className=\"mood-label\">Contrarian</span>\r\n            <span className=\"mood-value\">\r\n              {sentiment.strategies.contrarian || 0} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">‚ö°</span>\r\n            <span className=\"mood-label\">Active</span>\r\n            <span className=\"mood-value\">\r\n              {aiTraders.filter(t => t.isActive).length} traders\r\n            </span>\r\n          </div>\r\n          <div className=\"mood-item\">\r\n            <span className=\"mood-icon\">üí∞</span>\r\n            <span className=\"mood-label\">Profitable</span>\r\n            <span className=\"mood-value\">\r\n              {aiTraders.filter(t => t.profitLoss > 0).length} traders\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MarketSentiment;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}