{"ast":null,"code":"var _jsxFileName = \"F:\\\\Windsurf\\\\Native\\\\GTC 3\\\\src\\\\components\\\\AIControlCenter.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './AIControlCenter.css';\nimport { STRATEGY_TYPES, EMOTIONAL_STATES, RISK_LEVELS } from '../aiTraders';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AIControlCenter = ({\n  aiTraders,\n  onUpdateTraders,\n  onClose\n}) => {\n  _s();\n  const [globalSettings, setGlobalSettings] = useState({\n    // Trading Behavior\n    tradingThresholds: {\n      buyThreshold: 0.6,\n      sellThreshold: 0.4\n    },\n    // Emotional Sensitivity\n    emotionalSensitivity: {\n      fomoTrigger: 0.8,\n      panicTrigger: 0.7,\n      supplyStressTrigger: 0.6,\n      greedTrigger: 0.6,\n      fearTrigger: 0.7,\n      excitementTrigger: 0.4\n    },\n    // Emotional Intensity\n    emotionalIntensity: {\n      fomoMultiplier: 1.0,\n      panicMultiplier: 1.0,\n      greedMultiplier: 0.8,\n      fearMultiplier: 0.9,\n      excitementMultiplier: 0.6,\n      emotionalRecovery: 0.1\n    },\n    // Signal Amplification\n    signalAmplification: {\n      momentumMultiplier: 2,\n      scalpingMultiplier: 5,\n      volatilityWeight: 1.0,\n      priceReactionWeight: 0.0\n    },\n    // Trading Activity\n    tradingActivity: {\n      maxPositions: 5,\n      positionSizeMultiplier: 1.0,\n      riskToleranceMultiplier: 1.0,\n      tradingFrequency: 1.0\n    },\n    // Market Behavior\n    marketBehavior: {\n      herdInstinctMultiplier: 1.0,\n      contrarianMultiplier: 1.0,\n      momentumSensitivity: 1.0,\n      volatilityTolerance: 1.0\n    }\n  });\n  const [activeTab, setActiveTab] = useState('trading');\n  const [selectedTraders, setSelectedTraders] = useState([]);\n  const handleGlobalSettingChange = (category, setting, value) => {\n    setGlobalSettings(prev => ({\n      ...prev,\n      [category]: {\n        ...prev[category],\n        [setting]: parseFloat(value)\n      }\n    }));\n  };\n  const applyGlobalSettings = () => {\n    const updatedTraders = aiTraders.map(trader => ({\n      ...trader,\n      // Update trading thresholds (these will be used in the trading logic)\n      tradingThresholds: globalSettings.tradingThresholds,\n      // Update emotional sensitivity\n      emotionalSensitivity: globalSettings.emotionalSensitivity,\n      // Update emotional intensity\n      emotionalIntensity: globalSettings.emotionalIntensity,\n      // Update signal amplification\n      signalAmplification: globalSettings.signalAmplification,\n      // Update trading activity settings\n      maxPositions: Math.round(globalSettings.tradingActivity.maxPositions * (1 + (Math.random() - 0.5) * 0.2)),\n      riskTolerance: Math.min(1, trader.riskTolerance * globalSettings.tradingActivity.riskToleranceMultiplier),\n      // Update market behavior\n      herdInstinct: Math.min(1, trader.herdInstinct * globalSettings.marketBehavior.herdInstinctMultiplier),\n      contrarianTendency: Math.min(1, trader.contrarianTendency * globalSettings.marketBehavior.contrarianMultiplier),\n      momentumSensitivity: Math.min(1, trader.momentumSensitivity * globalSettings.marketBehavior.momentumSensitivity),\n      volatilityTolerance: Math.min(1, trader.volatilityTolerance * globalSettings.marketBehavior.volatilityTolerance),\n      // Store global settings reference\n      globalSettings: globalSettings\n    }));\n    onUpdateTraders(updatedTraders);\n  };\n  const resetToDefaults = () => {\n    setGlobalSettings({\n      tradingThresholds: {\n        buyThreshold: 0.6,\n        sellThreshold: 0.4\n      },\n      emotionalSensitivity: {\n        fomoTrigger: 0.8,\n        panicTrigger: 0.7,\n        supplyStressTrigger: 0.6,\n        greedTrigger: 0.6,\n        fearTrigger: 0.7,\n        excitementTrigger: 0.4\n      },\n      emotionalIntensity: {\n        fomoMultiplier: 1.0,\n        panicMultiplier: 1.0,\n        greedMultiplier: 0.8,\n        fearMultiplier: 0.9,\n        excitementMultiplier: 0.6,\n        emotionalRecovery: 0.1\n      },\n      signalAmplification: {\n        momentumMultiplier: 2,\n        scalpingMultiplier: 5,\n        volatilityWeight: 1.0,\n        priceReactionWeight: 0.0\n      },\n      tradingActivity: {\n        maxPositions: 5,\n        positionSizeMultiplier: 1.0,\n        riskToleranceMultiplier: 1.0,\n        tradingFrequency: 1.0\n      },\n      marketBehavior: {\n        herdInstinctMultiplier: 1.0,\n        contrarianMultiplier: 1.0,\n        momentumSensitivity: 1.0,\n        volatilityTolerance: 1.0\n      }\n    });\n  };\n  const createAggressiveProfile = () => {\n    setGlobalSettings({\n      tradingThresholds: {\n        buyThreshold: 0.55,\n        sellThreshold: 0.45\n      },\n      emotionalSensitivity: {\n        fomoTrigger: 0.6,\n        panicTrigger: 0.5,\n        supplyStressTrigger: 0.4,\n        greedTrigger: 0.4,\n        fearTrigger: 0.5,\n        excitementTrigger: 0.3\n      },\n      emotionalIntensity: {\n        fomoMultiplier: 1.3,\n        panicMultiplier: 1.4,\n        greedMultiplier: 1.2,\n        fearMultiplier: 1.1,\n        excitementMultiplier: 1.0,\n        emotionalRecovery: 0.05\n      },\n      signalAmplification: {\n        momentumMultiplier: 3,\n        scalpingMultiplier: 8,\n        volatilityWeight: 1.5,\n        priceReactionWeight: 0.4\n      },\n      tradingActivity: {\n        maxPositions: 7,\n        positionSizeMultiplier: 1.3,\n        riskToleranceMultiplier: 1.2,\n        tradingFrequency: 1.5\n      },\n      marketBehavior: {\n        herdInstinctMultiplier: 1.3,\n        contrarianMultiplier: 0.8,\n        momentumSensitivity: 1.4,\n        volatilityTolerance: 1.2\n      }\n    });\n  };\n  const createConservativeProfile = () => {\n    setGlobalSettings({\n      tradingThresholds: {\n        buyThreshold: 0.7,\n        sellThreshold: 0.3\n      },\n      emotionalSensitivity: {\n        fomoTrigger: 0.9,\n        panicTrigger: 0.8,\n        supplyStressTrigger: 0.8,\n        greedTrigger: 0.8,\n        fearTrigger: 0.6,\n        excitementTrigger: 0.6\n      },\n      emotionalIntensity: {\n        fomoMultiplier: 0.7,\n        panicMultiplier: 0.8,\n        greedMultiplier: 0.6,\n        fearMultiplier: 0.8,\n        excitementMultiplier: 0.5,\n        emotionalRecovery: 0.15\n      },\n      signalAmplification: {\n        momentumMultiplier: 1.5,\n        scalpingMultiplier: 3,\n        volatilityWeight: 0.7,\n        priceReactionWeight: 0.1\n      },\n      tradingActivity: {\n        maxPositions: 3,\n        positionSizeMultiplier: 0.7,\n        riskToleranceMultiplier: 0.8,\n        tradingFrequency: 0.7\n      },\n      marketBehavior: {\n        herdInstinctMultiplier: 0.8,\n        contrarianMultiplier: 1.2,\n        momentumSensitivity: 0.8,\n        volatilityTolerance: 0.7\n      }\n    });\n  };\n  const renderSlider = (label, value, min, max, step, onChange, description) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"control-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"control-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"control-value\",\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: min,\n      max: max,\n      step: step,\n      value: value,\n      onChange: e => onChange(e.target.value),\n      className: \"control-slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), description && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"control-description\",\n      children: description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n  const renderTab = (tabName, title) => /*#__PURE__*/_jsxDEV(\"button\", {\n    className: `tab-button ${activeTab === tabName ? 'active' : ''}`,\n    onClick: () => setActiveTab(tabName),\n    children: title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 252,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"ai-control-center-overlay\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ai-control-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-header-bar\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uD83E\\uDD16 AI Control Center\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"close-button\",\n          onClick: onClose,\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-tabs\",\n        children: [renderTab('trading', 'Trading'), renderTab('emotional', 'Emotions'), renderTab('signals', 'Signals'), renderTab('activity', 'Activity'), renderTab('behavior', 'Behavior'), renderTab('presets', 'Presets')]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-content\",\n        children: [activeTab === 'trading' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Trading Thresholds\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 280,\n            columnNumber: 15\n          }, this), renderSlider('Buy Threshold', globalSettings.tradingThresholds.buyThreshold, 0.5, 0.8, 0.01, value => handleGlobalSettingChange('tradingThresholds', 'buyThreshold', value), 'Higher = more selective buying'), renderSlider('Sell Threshold', globalSettings.tradingThresholds.sellThreshold, 0.2, 0.5, 0.01, value => handleGlobalSettingChange('tradingThresholds', 'sellThreshold', value), 'Lower = more selective selling')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 13\n        }, this), activeTab === 'emotional' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Emotional Sensitivity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), renderSlider('FOMO Trigger', globalSettings.emotionalSensitivity.fomoTrigger, 0.3, 1.0, 0.05, value => handleGlobalSettingChange('emotionalSensitivity', 'fomoTrigger', value), 'Lower = easier to trigger FOMO'), renderSlider('Panic Trigger', globalSettings.emotionalSensitivity.panicTrigger, 0.3, 1.0, 0.05, value => handleGlobalSettingChange('emotionalSensitivity', 'panicTrigger', value), 'Lower = easier to trigger panic'), renderSlider('Greed Trigger', globalSettings.emotionalSensitivity.greedTrigger, 0.2, 0.8, 0.05, value => handleGlobalSettingChange('emotionalSensitivity', 'greedTrigger', value), 'Lower = easier to trigger greed'), renderSlider('Fear Trigger', globalSettings.emotionalSensitivity.fearTrigger, 0.3, 1.0, 0.05, value => handleGlobalSettingChange('emotionalSensitivity', 'fearTrigger', value), 'Lower = easier to trigger fear'), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Emotional Intensity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this), renderSlider('FOMO Intensity', globalSettings.emotionalIntensity.fomoMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('emotionalIntensity', 'fomoMultiplier', value), 'Higher = stronger FOMO reactions'), renderSlider('Panic Intensity', globalSettings.emotionalIntensity.panicMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('emotionalIntensity', 'panicMultiplier', value), 'Higher = stronger panic reactions'), renderSlider('Emotional Recovery', globalSettings.emotionalIntensity.emotionalRecovery, 0.01, 0.2, 0.01, value => handleGlobalSettingChange('emotionalIntensity', 'emotionalRecovery', value), 'Higher = faster emotional recovery')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 13\n        }, this), activeTab === 'signals' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Signal Amplification\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 15\n          }, this), renderSlider('Momentum Sensitivity', globalSettings.signalAmplification.momentumMultiplier, 1, 5, 0.1, value => handleGlobalSettingChange('signalAmplification', 'momentumMultiplier', value), 'Higher = more reactive to trends'), renderSlider('Scalping Sensitivity', globalSettings.signalAmplification.scalpingMultiplier, 2, 10, 0.5, value => handleGlobalSettingChange('signalAmplification', 'scalpingMultiplier', value), 'Higher = more reactive to short-term moves'), renderSlider('Price Reaction Weight', globalSettings.signalAmplification.priceReactionWeight, 0.0, 0.5, 0.05, value => handleGlobalSettingChange('signalAmplification', 'priceReactionWeight', value), 'Higher = more immediate price reaction'), renderSlider('Volatility Weight', globalSettings.signalAmplification.volatilityWeight, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('signalAmplification', 'volatilityWeight', value), 'Higher = stronger volatility reactions')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 13\n        }, this), activeTab === 'activity' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Trading Activity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 15\n          }, this), renderSlider('Max Positions', globalSettings.tradingActivity.maxPositions, 2, 10, 1, value => handleGlobalSettingChange('tradingActivity', 'maxPositions', value), 'Higher = more concurrent trades'), renderSlider('Position Size Multiplier', globalSettings.tradingActivity.positionSizeMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('tradingActivity', 'positionSizeMultiplier', value), 'Higher = larger trade sizes'), renderSlider('Risk Tolerance Multiplier', globalSettings.tradingActivity.riskToleranceMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('tradingActivity', 'riskToleranceMultiplier', value), 'Higher = more risk taking'), renderSlider('Trading Frequency', globalSettings.tradingActivity.tradingFrequency, 0.3, 2.0, 0.1, value => handleGlobalSettingChange('tradingActivity', 'tradingFrequency', value), 'Higher = more frequent trading')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 13\n        }, this), activeTab === 'behavior' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Market Behavior\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 15\n          }, this), renderSlider('Herd Instinct', globalSettings.marketBehavior.herdInstinctMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('marketBehavior', 'herdInstinctMultiplier', value), 'Higher = more following behavior'), renderSlider('Contrarian Tendency', globalSettings.marketBehavior.contrarianMultiplier, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('marketBehavior', 'contrarianMultiplier', value), 'Higher = more opposing behavior'), renderSlider('Momentum Sensitivity', globalSettings.marketBehavior.momentumSensitivity, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('marketBehavior', 'momentumSensitivity', value), 'Higher = more momentum following'), renderSlider('Volatility Tolerance', globalSettings.marketBehavior.volatilityTolerance, 0.5, 2.0, 0.1, value => handleGlobalSettingChange('marketBehavior', 'volatilityTolerance', value), 'Higher = less affected by volatility')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 13\n        }, this), activeTab === 'presets' && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"control-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Quick Presets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 459,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"preset-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"preset-button aggressive\",\n              onClick: createAggressiveProfile,\n              children: [\"\\uD83D\\uDD25 Aggressive Trading\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preset-description\",\n                children: \"High reactivity, frequent trading, strong emotions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"preset-button conservative\",\n              onClick: createConservativeProfile,\n              children: [\"\\uD83D\\uDEE1\\uFE0F Conservative Trading\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preset-description\",\n                children: \"Low reactivity, careful trading, mild emotions\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 469,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 467,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"preset-button default\",\n              onClick: resetToDefaults,\n              children: [\"\\u2696\\uFE0F Default Settings\", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"preset-description\",\n                children: \"Balanced approach, moderate reactivity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 475,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 473,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"trader-stats\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"Current AI Trader Stats\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"stats-grid\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Traders:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: aiTraders.length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Active Traders:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 489,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: aiTraders.filter(t => t.isActive).length\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 490,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 488,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Avg Capital:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: [\"\\u20B9\", Math.round(aiTraders.reduce((sum, t) => sum + t.capital, 0) / aiTraders.length).toLocaleString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 494,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 492,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"stat-item\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-label\",\n                  children: \"Total Factories:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 497,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"stat-value\",\n                  children: aiTraders.reduce((sum, t) => sum + t.factories.length, 0)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 498,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 496,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 458,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"control-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"apply-button\",\n          onClick: applyGlobalSettings,\n          children: \"Apply Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-button\",\n          onClick: resetToDefaults,\n          children: \"Reset to Defaults\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 506,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 5\n  }, this);\n};\n_s(AIControlCenter, \"vradrsFpEka+MX8vMxWGv+vSwlY=\");\n_c = AIControlCenter;\nexport default AIControlCenter;\nvar _c;\n$RefreshReg$(_c, \"AIControlCenter\");","map":{"version":3,"names":["React","useState","STRATEGY_TYPES","EMOTIONAL_STATES","RISK_LEVELS","jsxDEV","_jsxDEV","AIControlCenter","aiTraders","onUpdateTraders","onClose","_s","globalSettings","setGlobalSettings","tradingThresholds","buyThreshold","sellThreshold","emotionalSensitivity","fomoTrigger","panicTrigger","supplyStressTrigger","greedTrigger","fearTrigger","excitementTrigger","emotionalIntensity","fomoMultiplier","panicMultiplier","greedMultiplier","fearMultiplier","excitementMultiplier","emotionalRecovery","signalAmplification","momentumMultiplier","scalpingMultiplier","volatilityWeight","priceReactionWeight","tradingActivity","maxPositions","positionSizeMultiplier","riskToleranceMultiplier","tradingFrequency","marketBehavior","herdInstinctMultiplier","contrarianMultiplier","momentumSensitivity","volatilityTolerance","activeTab","setActiveTab","selectedTraders","setSelectedTraders","handleGlobalSettingChange","category","setting","value","prev","parseFloat","applyGlobalSettings","updatedTraders","map","trader","Math","round","random","riskTolerance","min","herdInstinct","contrarianTendency","resetToDefaults","createAggressiveProfile","createConservativeProfile","renderSlider","label","max","step","onChange","description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","e","target","renderTab","tabName","title","onClick","length","filter","t","isActive","reduce","sum","capital","toLocaleString","factories","_c","$RefreshReg$"],"sources":["F:/Windsurf/Native/GTC 3/src/components/AIControlCenter.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './AIControlCenter.css';\r\nimport { STRATEGY_TYPES, EMOTIONAL_STATES, RISK_LEVELS } from '../aiTraders';\r\n\r\nconst AIControlCenter = ({ aiTraders, onUpdateTraders, onClose }) => {\r\n  const [globalSettings, setGlobalSettings] = useState({\r\n    // Trading Behavior\r\n    tradingThresholds: {\r\n      buyThreshold: 0.6,\r\n      sellThreshold: 0.4\r\n    },\r\n    \r\n    // Emotional Sensitivity\r\n    emotionalSensitivity: {\r\n      fomoTrigger: 0.8,\r\n      panicTrigger: 0.7,\r\n      supplyStressTrigger: 0.6,\r\n      greedTrigger: 0.6,\r\n      fearTrigger: 0.7,\r\n      excitementTrigger: 0.4\r\n    },\r\n    \r\n    // Emotional Intensity\r\n    emotionalIntensity: {\r\n      fomoMultiplier: 1.0,\r\n      panicMultiplier: 1.0,\r\n      greedMultiplier: 0.8,\r\n      fearMultiplier: 0.9,\r\n      excitementMultiplier: 0.6,\r\n      emotionalRecovery: 0.1\r\n    },\r\n    \r\n    // Signal Amplification\r\n    signalAmplification: {\r\n      momentumMultiplier: 2,\r\n      scalpingMultiplier: 5,\r\n      volatilityWeight: 1.0,\r\n      priceReactionWeight: 0.0\r\n    },\r\n    \r\n    // Trading Activity\r\n    tradingActivity: {\r\n      maxPositions: 5,\r\n      positionSizeMultiplier: 1.0,\r\n      riskToleranceMultiplier: 1.0,\r\n      tradingFrequency: 1.0\r\n    },\r\n    \r\n    // Market Behavior\r\n    marketBehavior: {\r\n      herdInstinctMultiplier: 1.0,\r\n      contrarianMultiplier: 1.0,\r\n      momentumSensitivity: 1.0,\r\n      volatilityTolerance: 1.0\r\n    }\r\n  });\r\n\r\n  const [activeTab, setActiveTab] = useState('trading');\r\n  const [selectedTraders, setSelectedTraders] = useState([]);\r\n\r\n  const handleGlobalSettingChange = (category, setting, value) => {\r\n    setGlobalSettings(prev => ({\r\n      ...prev,\r\n      [category]: {\r\n        ...prev[category],\r\n        [setting]: parseFloat(value)\r\n      }\r\n    }));\r\n  };\r\n\r\n  const applyGlobalSettings = () => {\r\n    const updatedTraders = aiTraders.map(trader => ({\r\n      ...trader,\r\n      // Update trading thresholds (these will be used in the trading logic)\r\n      tradingThresholds: globalSettings.tradingThresholds,\r\n      \r\n      // Update emotional sensitivity\r\n      emotionalSensitivity: globalSettings.emotionalSensitivity,\r\n      \r\n      // Update emotional intensity\r\n      emotionalIntensity: globalSettings.emotionalIntensity,\r\n      \r\n      // Update signal amplification\r\n      signalAmplification: globalSettings.signalAmplification,\r\n      \r\n      // Update trading activity settings\r\n      maxPositions: Math.round(globalSettings.tradingActivity.maxPositions * (1 + (Math.random() - 0.5) * 0.2)),\r\n      riskTolerance: Math.min(1, trader.riskTolerance * globalSettings.tradingActivity.riskToleranceMultiplier),\r\n      \r\n      // Update market behavior\r\n      herdInstinct: Math.min(1, trader.herdInstinct * globalSettings.marketBehavior.herdInstinctMultiplier),\r\n      contrarianTendency: Math.min(1, trader.contrarianTendency * globalSettings.marketBehavior.contrarianMultiplier),\r\n      momentumSensitivity: Math.min(1, trader.momentumSensitivity * globalSettings.marketBehavior.momentumSensitivity),\r\n      volatilityTolerance: Math.min(1, trader.volatilityTolerance * globalSettings.marketBehavior.volatilityTolerance),\r\n      \r\n      // Store global settings reference\r\n      globalSettings: globalSettings\r\n    }));\r\n\r\n    onUpdateTraders(updatedTraders);\r\n  };\r\n\r\n  const resetToDefaults = () => {\r\n    setGlobalSettings({\r\n      tradingThresholds: {\r\n        buyThreshold: 0.6,\r\n        sellThreshold: 0.4\r\n      },\r\n      emotionalSensitivity: {\r\n        fomoTrigger: 0.8,\r\n        panicTrigger: 0.7,\r\n        supplyStressTrigger: 0.6,\r\n        greedTrigger: 0.6,\r\n        fearTrigger: 0.7,\r\n        excitementTrigger: 0.4\r\n      },\r\n      emotionalIntensity: {\r\n        fomoMultiplier: 1.0,\r\n        panicMultiplier: 1.0,\r\n        greedMultiplier: 0.8,\r\n        fearMultiplier: 0.9,\r\n        excitementMultiplier: 0.6,\r\n        emotionalRecovery: 0.1\r\n      },\r\n      signalAmplification: {\r\n        momentumMultiplier: 2,\r\n        scalpingMultiplier: 5,\r\n        volatilityWeight: 1.0,\r\n        priceReactionWeight: 0.0\r\n      },\r\n      tradingActivity: {\r\n        maxPositions: 5,\r\n        positionSizeMultiplier: 1.0,\r\n        riskToleranceMultiplier: 1.0,\r\n        tradingFrequency: 1.0\r\n      },\r\n      marketBehavior: {\r\n        herdInstinctMultiplier: 1.0,\r\n        contrarianMultiplier: 1.0,\r\n        momentumSensitivity: 1.0,\r\n        volatilityTolerance: 1.0\r\n      }\r\n    });\r\n  };\r\n\r\n  const createAggressiveProfile = () => {\r\n    setGlobalSettings({\r\n      tradingThresholds: {\r\n        buyThreshold: 0.55,\r\n        sellThreshold: 0.45\r\n      },\r\n      emotionalSensitivity: {\r\n        fomoTrigger: 0.6,\r\n        panicTrigger: 0.5,\r\n        supplyStressTrigger: 0.4,\r\n        greedTrigger: 0.4,\r\n        fearTrigger: 0.5,\r\n        excitementTrigger: 0.3\r\n      },\r\n      emotionalIntensity: {\r\n        fomoMultiplier: 1.3,\r\n        panicMultiplier: 1.4,\r\n        greedMultiplier: 1.2,\r\n        fearMultiplier: 1.1,\r\n        excitementMultiplier: 1.0,\r\n        emotionalRecovery: 0.05\r\n      },\r\n      signalAmplification: {\r\n        momentumMultiplier: 3,\r\n        scalpingMultiplier: 8,\r\n        volatilityWeight: 1.5,\r\n        priceReactionWeight: 0.4\r\n      },\r\n      tradingActivity: {\r\n        maxPositions: 7,\r\n        positionSizeMultiplier: 1.3,\r\n        riskToleranceMultiplier: 1.2,\r\n        tradingFrequency: 1.5\r\n      },\r\n      marketBehavior: {\r\n        herdInstinctMultiplier: 1.3,\r\n        contrarianMultiplier: 0.8,\r\n        momentumSensitivity: 1.4,\r\n        volatilityTolerance: 1.2\r\n      }\r\n    });\r\n  };\r\n\r\n  const createConservativeProfile = () => {\r\n    setGlobalSettings({\r\n      tradingThresholds: {\r\n        buyThreshold: 0.7,\r\n        sellThreshold: 0.3\r\n      },\r\n      emotionalSensitivity: {\r\n        fomoTrigger: 0.9,\r\n        panicTrigger: 0.8,\r\n        supplyStressTrigger: 0.8,\r\n        greedTrigger: 0.8,\r\n        fearTrigger: 0.6,\r\n        excitementTrigger: 0.6\r\n      },\r\n      emotionalIntensity: {\r\n        fomoMultiplier: 0.7,\r\n        panicMultiplier: 0.8,\r\n        greedMultiplier: 0.6,\r\n        fearMultiplier: 0.8,\r\n        excitementMultiplier: 0.5,\r\n        emotionalRecovery: 0.15\r\n      },\r\n      signalAmplification: {\r\n        momentumMultiplier: 1.5,\r\n        scalpingMultiplier: 3,\r\n        volatilityWeight: 0.7,\r\n        priceReactionWeight: 0.1\r\n      },\r\n      tradingActivity: {\r\n        maxPositions: 3,\r\n        positionSizeMultiplier: 0.7,\r\n        riskToleranceMultiplier: 0.8,\r\n        tradingFrequency: 0.7\r\n      },\r\n      marketBehavior: {\r\n        herdInstinctMultiplier: 0.8,\r\n        contrarianMultiplier: 1.2,\r\n        momentumSensitivity: 0.8,\r\n        volatilityTolerance: 0.7\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderSlider = (label, value, min, max, step, onChange, description) => (\r\n    <div className=\"control-item\">\r\n      <div className=\"control-header\">\r\n        <label className=\"control-label\">{label}</label>\r\n        <span className=\"control-value\">{value}</span>\r\n      </div>\r\n      <input\r\n        type=\"range\"\r\n        min={min}\r\n        max={max}\r\n        step={step}\r\n        value={value}\r\n        onChange={(e) => onChange(e.target.value)}\r\n        className=\"control-slider\"\r\n      />\r\n      {description && <div className=\"control-description\">{description}</div>}\r\n    </div>\r\n  );\r\n\r\n  const renderTab = (tabName, title) => (\r\n    <button\r\n      className={`tab-button ${activeTab === tabName ? 'active' : ''}`}\r\n      onClick={() => setActiveTab(tabName)}\r\n    >\r\n      {title}\r\n    </button>\r\n  );\r\n\r\n  return (\r\n    <div className=\"ai-control-center-overlay\">\r\n      <div className=\"ai-control-center\">\r\n        <div className=\"control-header-bar\">\r\n          <h2>🤖 AI Control Center</h2>\r\n          <button className=\"close-button\" onClick={onClose}>×</button>\r\n        </div>\r\n\r\n        <div className=\"control-tabs\">\r\n          {renderTab('trading', 'Trading')}\r\n          {renderTab('emotional', 'Emotions')}\r\n          {renderTab('signals', 'Signals')}\r\n          {renderTab('activity', 'Activity')}\r\n          {renderTab('behavior', 'Behavior')}\r\n          {renderTab('presets', 'Presets')}\r\n        </div>\r\n\r\n        <div className=\"control-content\">\r\n          {activeTab === 'trading' && (\r\n            <div className=\"control-section\">\r\n              <h3>Trading Thresholds</h3>\r\n              {renderSlider(\r\n                'Buy Threshold',\r\n                globalSettings.tradingThresholds.buyThreshold,\r\n                0.5, 0.8, 0.01,\r\n                (value) => handleGlobalSettingChange('tradingThresholds', 'buyThreshold', value),\r\n                'Higher = more selective buying'\r\n              )}\r\n              {renderSlider(\r\n                'Sell Threshold',\r\n                globalSettings.tradingThresholds.sellThreshold,\r\n                0.2, 0.5, 0.01,\r\n                (value) => handleGlobalSettingChange('tradingThresholds', 'sellThreshold', value),\r\n                'Lower = more selective selling'\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'emotional' && (\r\n            <div className=\"control-section\">\r\n              <h3>Emotional Sensitivity</h3>\r\n              {renderSlider(\r\n                'FOMO Trigger',\r\n                globalSettings.emotionalSensitivity.fomoTrigger,\r\n                0.3, 1.0, 0.05,\r\n                (value) => handleGlobalSettingChange('emotionalSensitivity', 'fomoTrigger', value),\r\n                'Lower = easier to trigger FOMO'\r\n              )}\r\n              {renderSlider(\r\n                'Panic Trigger',\r\n                globalSettings.emotionalSensitivity.panicTrigger,\r\n                0.3, 1.0, 0.05,\r\n                (value) => handleGlobalSettingChange('emotionalSensitivity', 'panicTrigger', value),\r\n                'Lower = easier to trigger panic'\r\n              )}\r\n              {renderSlider(\r\n                'Greed Trigger',\r\n                globalSettings.emotionalSensitivity.greedTrigger,\r\n                0.2, 0.8, 0.05,\r\n                (value) => handleGlobalSettingChange('emotionalSensitivity', 'greedTrigger', value),\r\n                'Lower = easier to trigger greed'\r\n              )}\r\n              {renderSlider(\r\n                'Fear Trigger',\r\n                globalSettings.emotionalSensitivity.fearTrigger,\r\n                0.3, 1.0, 0.05,\r\n                (value) => handleGlobalSettingChange('emotionalSensitivity', 'fearTrigger', value),\r\n                'Lower = easier to trigger fear'\r\n              )}\r\n              \r\n              <h3>Emotional Intensity</h3>\r\n              {renderSlider(\r\n                'FOMO Intensity',\r\n                globalSettings.emotionalIntensity.fomoMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('emotionalIntensity', 'fomoMultiplier', value),\r\n                'Higher = stronger FOMO reactions'\r\n              )}\r\n              {renderSlider(\r\n                'Panic Intensity',\r\n                globalSettings.emotionalIntensity.panicMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('emotionalIntensity', 'panicMultiplier', value),\r\n                'Higher = stronger panic reactions'\r\n              )}\r\n              {renderSlider(\r\n                'Emotional Recovery',\r\n                globalSettings.emotionalIntensity.emotionalRecovery,\r\n                0.01, 0.2, 0.01,\r\n                (value) => handleGlobalSettingChange('emotionalIntensity', 'emotionalRecovery', value),\r\n                'Higher = faster emotional recovery'\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'signals' && (\r\n            <div className=\"control-section\">\r\n              <h3>Signal Amplification</h3>\r\n              {renderSlider(\r\n                'Momentum Sensitivity',\r\n                globalSettings.signalAmplification.momentumMultiplier,\r\n                1, 5, 0.1,\r\n                (value) => handleGlobalSettingChange('signalAmplification', 'momentumMultiplier', value),\r\n                'Higher = more reactive to trends'\r\n              )}\r\n              {renderSlider(\r\n                'Scalping Sensitivity',\r\n                globalSettings.signalAmplification.scalpingMultiplier,\r\n                2, 10, 0.5,\r\n                (value) => handleGlobalSettingChange('signalAmplification', 'scalpingMultiplier', value),\r\n                'Higher = more reactive to short-term moves'\r\n              )}\r\n              {renderSlider(\r\n                'Price Reaction Weight',\r\n                globalSettings.signalAmplification.priceReactionWeight,\r\n                0.0, 0.5, 0.05,\r\n                (value) => handleGlobalSettingChange('signalAmplification', 'priceReactionWeight', value),\r\n                'Higher = more immediate price reaction'\r\n              )}\r\n              {renderSlider(\r\n                'Volatility Weight',\r\n                globalSettings.signalAmplification.volatilityWeight,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('signalAmplification', 'volatilityWeight', value),\r\n                'Higher = stronger volatility reactions'\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'activity' && (\r\n            <div className=\"control-section\">\r\n              <h3>Trading Activity</h3>\r\n              {renderSlider(\r\n                'Max Positions',\r\n                globalSettings.tradingActivity.maxPositions,\r\n                2, 10, 1,\r\n                (value) => handleGlobalSettingChange('tradingActivity', 'maxPositions', value),\r\n                'Higher = more concurrent trades'\r\n              )}\r\n              {renderSlider(\r\n                'Position Size Multiplier',\r\n                globalSettings.tradingActivity.positionSizeMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('tradingActivity', 'positionSizeMultiplier', value),\r\n                'Higher = larger trade sizes'\r\n              )}\r\n              {renderSlider(\r\n                'Risk Tolerance Multiplier',\r\n                globalSettings.tradingActivity.riskToleranceMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('tradingActivity', 'riskToleranceMultiplier', value),\r\n                'Higher = more risk taking'\r\n              )}\r\n              {renderSlider(\r\n                'Trading Frequency',\r\n                globalSettings.tradingActivity.tradingFrequency,\r\n                0.3, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('tradingActivity', 'tradingFrequency', value),\r\n                'Higher = more frequent trading'\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'behavior' && (\r\n            <div className=\"control-section\">\r\n              <h3>Market Behavior</h3>\r\n              {renderSlider(\r\n                'Herd Instinct',\r\n                globalSettings.marketBehavior.herdInstinctMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('marketBehavior', 'herdInstinctMultiplier', value),\r\n                'Higher = more following behavior'\r\n              )}\r\n              {renderSlider(\r\n                'Contrarian Tendency',\r\n                globalSettings.marketBehavior.contrarianMultiplier,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('marketBehavior', 'contrarianMultiplier', value),\r\n                'Higher = more opposing behavior'\r\n              )}\r\n              {renderSlider(\r\n                'Momentum Sensitivity',\r\n                globalSettings.marketBehavior.momentumSensitivity,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('marketBehavior', 'momentumSensitivity', value),\r\n                'Higher = more momentum following'\r\n              )}\r\n              {renderSlider(\r\n                'Volatility Tolerance',\r\n                globalSettings.marketBehavior.volatilityTolerance,\r\n                0.5, 2.0, 0.1,\r\n                (value) => handleGlobalSettingChange('marketBehavior', 'volatilityTolerance', value),\r\n                'Higher = less affected by volatility'\r\n              )}\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'presets' && (\r\n            <div className=\"control-section\">\r\n              <h3>Quick Presets</h3>\r\n              <div className=\"preset-buttons\">\r\n                <button className=\"preset-button aggressive\" onClick={createAggressiveProfile}>\r\n                  🔥 Aggressive Trading\r\n                  <div className=\"preset-description\">\r\n                    High reactivity, frequent trading, strong emotions\r\n                  </div>\r\n                </button>\r\n                <button className=\"preset-button conservative\" onClick={createConservativeProfile}>\r\n                  🛡️ Conservative Trading\r\n                  <div className=\"preset-description\">\r\n                    Low reactivity, careful trading, mild emotions\r\n                  </div>\r\n                </button>\r\n                <button className=\"preset-button default\" onClick={resetToDefaults}>\r\n                  ⚖️ Default Settings\r\n                  <div className=\"preset-description\">\r\n                    Balanced approach, moderate reactivity\r\n                  </div>\r\n                </button>\r\n              </div>\r\n              \r\n              <div className=\"trader-stats\">\r\n                <h4>Current AI Trader Stats</h4>\r\n                <div className=\"stats-grid\">\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Total Traders:</span>\r\n                    <span className=\"stat-value\">{aiTraders.length}</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Active Traders:</span>\r\n                    <span className=\"stat-value\">{aiTraders.filter(t => t.isActive).length}</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Avg Capital:</span>\r\n                    <span className=\"stat-value\">₹{Math.round(aiTraders.reduce((sum, t) => sum + t.capital, 0) / aiTraders.length).toLocaleString()}</span>\r\n                  </div>\r\n                  <div className=\"stat-item\">\r\n                    <span className=\"stat-label\">Total Factories:</span>\r\n                    <span className=\"stat-value\">{aiTraders.reduce((sum, t) => sum + t.factories.length, 0)}</span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        <div className=\"control-actions\">\r\n          <button className=\"apply-button\" onClick={applyGlobalSettings}>\r\n            Apply Settings\r\n          </button>\r\n          <button className=\"reset-button\" onClick={resetToDefaults}>\r\n            Reset to Defaults\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AIControlCenter;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}