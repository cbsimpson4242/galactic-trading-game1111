{"ast":null,"code":"import React from'react';import'./Factory.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Factory=_ref=>{let{factory,onUpgrade}=_ref;const formatTime=seconds=>{const minutes=Math.floor(seconds/60);const remainingSeconds=seconds%60;return\"\".concat(minutes,\":\").concat(remainingSeconds.toString().padStart(2,'0'));};const getProgressPercentage=()=>{if(factory.productionTime===0)return 0;return(factory.productionTime-factory.timeRemaining)/factory.productionTime*100;};const isProducing=factory.timeRemaining>0;return/*#__PURE__*/_jsxs(\"div\",{className:\"factory-card\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"factory-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"factory-icon\",children:\"\\uD83C\\uDFED\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"factory-name\",children:factory.name}),/*#__PURE__*/_jsxs(\"span\",{className:\"factory-level\",children:[\"Level \",factory.level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"factory-details\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"production-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"production-label\",children:\"Produces:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"production-value\",children:[factory.productionQuantity,\" \",factory.commodityName,\" \",factory.productionUnit]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"production-time\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"time-label\",children:\"Production Time:\"}),/*#__PURE__*/_jsx(\"span\",{className:\"time-value\",children:formatTime(factory.productionTime)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"upgrade-cost\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"cost-label\",children:\"Upgrade Cost:\"}),/*#__PURE__*/_jsxs(\"span\",{className:\"cost-value\",children:[\"\\u20B9\",factory.upgradeCost.toLocaleString()]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"production-progress\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"progress-bar\",children:/*#__PURE__*/_jsx(\"div\",{className:\"progress-fill\",style:{width:\"\".concat(getProgressPercentage(),\"%\")}})}),/*#__PURE__*/_jsx(\"span\",{className:\"progress-text\",children:isProducing?\"Time remaining: \".concat(formatTime(factory.timeRemaining)):'Production complete!'})]}),/*#__PURE__*/_jsx(\"div\",{className:\"factory-actions\",children:/*#__PURE__*/_jsx(\"button\",{className:\"upgrade-button\",onClick:()=>onUpgrade(factory.id),children:\"Upgrade Factory\"})})]});};export default Factory;","map":{"version":3,"names":["React","jsx","_jsx","jsxs","_jsxs","Factory","_ref","factory","onUpgrade","formatTime","seconds","minutes","Math","floor","remainingSeconds","concat","toString","padStart","getProgressPercentage","productionTime","timeRemaining","isProducing","className","children","name","level","productionQuantity","commodityName","productionUnit","upgradeCost","toLocaleString","style","width","onClick","id"],"sources":["F:/Windsurf/Native/GTC 3/src/components/Factory.js"],"sourcesContent":["import React from 'react';\r\nimport './Factory.css';\r\n\r\nconst Factory = ({ factory, onUpgrade }) => {\r\n  const formatTime = (seconds) => {\r\n    const minutes = Math.floor(seconds / 60);\r\n    const remainingSeconds = seconds % 60;\r\n    return `${minutes}:${remainingSeconds.toString().padStart(2, '0')}`;\r\n  };\r\n\r\n  const getProgressPercentage = () => {\r\n    if (factory.productionTime === 0) return 0;\r\n    return ((factory.productionTime - factory.timeRemaining) / factory.productionTime) * 100;\r\n  };\r\n\r\n  const isProducing = factory.timeRemaining > 0;\r\n\r\n  return (\r\n    <div className=\"factory-card\">\r\n      <div className=\"factory-header\">\r\n        <span className=\"factory-icon\">üè≠</span>\r\n        <h3 className=\"factory-name\">{factory.name}</h3>\r\n        <span className=\"factory-level\">Level {factory.level}</span>\r\n      </div>\r\n      \r\n      <div className=\"factory-details\">\r\n        <div className=\"production-info\">\r\n          <span className=\"production-label\">Produces:</span>\r\n          <span className=\"production-value\">\r\n            {factory.productionQuantity} {factory.commodityName} {factory.productionUnit}\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"production-time\">\r\n          <span className=\"time-label\">Production Time:</span>\r\n          <span className=\"time-value\">{formatTime(factory.productionTime)}</span>\r\n        </div>\r\n        \r\n        <div className=\"upgrade-cost\">\r\n          <span className=\"cost-label\">Upgrade Cost:</span>\r\n          <span className=\"cost-value\">‚Çπ{factory.upgradeCost.toLocaleString()}</span>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"production-progress\">\r\n        <div className=\"progress-bar\">\r\n          <div \r\n            className=\"progress-fill\" \r\n            style={{ width: `${getProgressPercentage()}%` }}\r\n          ></div>\r\n        </div>\r\n        <span className=\"progress-text\">\r\n          {isProducing \r\n            ? `Time remaining: ${formatTime(factory.timeRemaining)}`\r\n            : 'Production complete!'\r\n          }\r\n        </span>\r\n      </div>\r\n      \r\n      <div className=\"factory-actions\">\r\n        <button \r\n          className=\"upgrade-button\"\r\n          onClick={() => onUpgrade(factory.id)}\r\n        >\r\n          Upgrade Factory\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Factory;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,eAAe,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEvB,KAAM,CAAAC,OAAO,CAAGC,IAAA,EAA4B,IAA3B,CAAEC,OAAO,CAAEC,SAAU,CAAC,CAAAF,IAAA,CACrC,KAAM,CAAAG,UAAU,CAAIC,OAAO,EAAK,CAC9B,KAAM,CAAAC,OAAO,CAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAAG,EAAE,CAAC,CACxC,KAAM,CAAAI,gBAAgB,CAAGJ,OAAO,CAAG,EAAE,CACrC,SAAAK,MAAA,CAAUJ,OAAO,MAAAI,MAAA,CAAID,gBAAgB,CAACE,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,EACnE,CAAC,CAED,KAAM,CAAAC,qBAAqB,CAAGA,CAAA,GAAM,CAClC,GAAIX,OAAO,CAACY,cAAc,GAAK,CAAC,CAAE,MAAO,EAAC,CAC1C,MAAQ,CAACZ,OAAO,CAACY,cAAc,CAAGZ,OAAO,CAACa,aAAa,EAAIb,OAAO,CAACY,cAAc,CAAI,GAAG,CAC1F,CAAC,CAED,KAAM,CAAAE,WAAW,CAAGd,OAAO,CAACa,aAAa,CAAG,CAAC,CAE7C,mBACEhB,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BnB,KAAA,QAAKkB,SAAS,CAAC,gBAAgB,CAAAC,QAAA,eAC7BrB,IAAA,SAAMoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,cAAE,CAAM,CAAC,cACxCrB,IAAA,OAAIoB,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEhB,OAAO,CAACiB,IAAI,CAAK,CAAC,cAChDpB,KAAA,SAAMkB,SAAS,CAAC,eAAe,CAAAC,QAAA,EAAC,QAAM,CAAChB,OAAO,CAACkB,KAAK,EAAO,CAAC,EACzD,CAAC,cAENrB,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BnB,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BrB,IAAA,SAAMoB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAAC,WAAS,CAAM,CAAC,cACnDnB,KAAA,SAAMkB,SAAS,CAAC,kBAAkB,CAAAC,QAAA,EAC/BhB,OAAO,CAACmB,kBAAkB,CAAC,GAAC,CAACnB,OAAO,CAACoB,aAAa,CAAC,GAAC,CAACpB,OAAO,CAACqB,cAAc,EACxE,CAAC,EACJ,CAAC,cAENxB,KAAA,QAAKkB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC9BrB,IAAA,SAAMoB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,kBAAgB,CAAM,CAAC,cACpDrB,IAAA,SAAMoB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAEd,UAAU,CAACF,OAAO,CAACY,cAAc,CAAC,CAAO,CAAC,EACrE,CAAC,cAENf,KAAA,QAAKkB,SAAS,CAAC,cAAc,CAAAC,QAAA,eAC3BrB,IAAA,SAAMoB,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,eAAa,CAAM,CAAC,cACjDnB,KAAA,SAAMkB,SAAS,CAAC,YAAY,CAAAC,QAAA,EAAC,QAAC,CAAChB,OAAO,CAACsB,WAAW,CAACC,cAAc,CAAC,CAAC,EAAO,CAAC,EACxE,CAAC,EACH,CAAC,cAEN1B,KAAA,QAAKkB,SAAS,CAAC,qBAAqB,CAAAC,QAAA,eAClCrB,IAAA,QAAKoB,SAAS,CAAC,cAAc,CAAAC,QAAA,cAC3BrB,IAAA,QACEoB,SAAS,CAAC,eAAe,CACzBS,KAAK,CAAE,CAAEC,KAAK,IAAAjB,MAAA,CAAKG,qBAAqB,CAAC,CAAC,KAAI,CAAE,CAC5C,CAAC,CACJ,CAAC,cACNhB,IAAA,SAAMoB,SAAS,CAAC,eAAe,CAAAC,QAAA,CAC5BF,WAAW,oBAAAN,MAAA,CACWN,UAAU,CAACF,OAAO,CAACa,aAAa,CAAC,EACpD,sBAAsB,CAEtB,CAAC,EACJ,CAAC,cAENlB,IAAA,QAAKoB,SAAS,CAAC,iBAAiB,CAAAC,QAAA,cAC9BrB,IAAA,WACEoB,SAAS,CAAC,gBAAgB,CAC1BW,OAAO,CAAEA,CAAA,GAAMzB,SAAS,CAACD,OAAO,CAAC2B,EAAE,CAAE,CAAAX,QAAA,CACtC,iBAED,CAAQ,CAAC,CACN,CAAC,EACH,CAAC,CAEV,CAAC,CAED,cAAe,CAAAlB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}